#!/usr/bin/with-contenv bashio
# rootfs/init  (idempotent init that prepares /data/cups and symlinks /etc/cups -> /data/cups/config)
set -euo pipefail

CONFIG_PATH="/data/cups"
CONFIG_CONF="${CONFIG_PATH}/config"
CONFIG_FILE="${CONFIG_CONF}/cupsd.conf"
PRINTERS_CONF="${CONFIG_CONF}/printers.conf"

bashio::log.info "CUPS init: preparing persistent directories under ${CONFIG_PATH}..."

# Ensure lp group exists (alpine minimal containers sometimes lack group)
if ! getent group lp > /dev/null 2>&1; then
  bashio::log.info "Creating lp group..."
  addgroup -S lp || true
fi

# Create directory layout (idempotent)
mkdir -p "${CONFIG_CONF}" \
         "${CONFIG_CONF}/ppd" \
         "${CONFIG_PATH}/cache" \
         "${CONFIG_PATH}/logs" \
         "${CONFIG_PATH}/state" \
         "${CONFIG_CONF}/certs"

# Set conservative permissions
chown -R root:lp "${CONFIG_PATH}"
# Directory perms: owner rwx, group rx (lp can read), others none
find "${CONFIG_PATH}" -type d -exec chmod 0750 {} \;
# File perms: owner rw, group r, others none (tight)
find "${CONFIG_PATH}" -type f -exec chmod 0640 {} \; || true

# For ppd files (need to be world-readable for some clients), set 0644
chmod 0755 "${CONFIG_CONF}/ppd" || true

# Seed cupsd.conf only if absent or empty
if [ ! -s "${CONFIG_FILE}" ]; then
  bashio::log.info "Seeding default cupsd.conf into ${CONFIG_FILE}..."
  # Use a minimal, AirPrint-friendly default (see file below)
  cat > "${CONFIG_FILE}" <<'CUPSD'
# Default cupsd.conf seeded by add-on init
ServerName CUPS-HA
# Note: CUPS respects CUPS_SERVERROOT env (set in Dockerfile)
Listen *:631
ServerAlias *
# Where to store server files; this should match your env (already set)
# ServerRoot /data/cups/config

Browsing On
BrowseLocalProtocols dnssd
DefaultShared Yes
PreserveJobHistory Yes
MaxJobs 500

# Modern access control for recent CUPS: use Require when supported
<Location />
  Order allow,deny
  Allow 127.0.0.1
  Allow ::1
  Allow 192.168.1.0/24
</Location>

<Location /admin>
  Order allow,deny
  Allow 127.0.0.1
  Allow ::1
  Allow 192.168.1.0/24
</Location>

<Location /jobs>
  Order allow,deny
  Allow 127.0.0.1
  Allow ::1
  Allow 192.168.1.0/24
</Location>

# Logging
ErrorLog ${CUPS_LOGDIR:-/data/cups/logs}/error_log
PageLog ${CUPS_LOGDIR:-/data/cups/logs}/page_log
MaxLogSize 10m
CUPSD
  chown root:lp "${CONFIG_FILE}"
  chmod 0640 "${CONFIG_FILE}"
fi

# Ensure printers.conf exists (CUPS writes to this)
if [ ! -f "${PRINTERS_CONF}" ]; then
  bashio::log.info "Creating empty printers.conf..."
  touch "${PRINTERS_CONF}"
  chown root:lp "${PRINTERS_CONF}"
  chmod 0640 "${PRINTERS_CONF}"
fi

# If /etc/cups is not already a symlink to persistent config, make it so.
if [ -e /etc/cups ] && [ ! -L /etc/cups ]; then
  bashio::log.info "Backing up original /etc/cups to /etc/cups.orig"
  mv /etc/cups /etc/cups.orig || true
fi

if [ -L /etc/cups ]; then
  # already symlinked, ensure it points to our config
  target="$(readlink -f /etc/cups)"
  if [ "${target}" != "${CONFIG_CONF}" ]; then
    rm -rf /etc/cups
    ln -s "${CONFIG_CONF}" /etc/cups
  fi
else
  ln -s "${CONFIG_CONF}" /etc/cups
fi

bashio::log.info "CUPS init: done. Persistent CUPS path: ${CONFIG_CONF}"
